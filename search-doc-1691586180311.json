[{"title":"TaskManager","type":0,"sectionRef":"#","url":"/SuphisDataStoreModule/api/TaskManager","content":"On this page TaskManager Handles all the tasks synchronously","keywords":""},{"title":"DataStore","type":0,"sectionRef":"#","url":"/SuphisDataStoreModule/api/DataStore","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"DataStore","url":"/SuphisDataStoreModule/api/DataStore#properties","content":" "},{"title":"Value​","type":1,"pageTitle":"DataStore","url":"/SuphisDataStoreModule/api/DataStore#Value","content":"&lt;/&gt; DataStore.Value: any Value of datastore  "},{"title":"Metedata​","type":1,"pageTitle":"DataStore","url":"/SuphisDataStoreModule/api/DataStore#Metedata","content":"&lt;/&gt; DataStore.Metedata: {[string]: any} Metadata associated with the key  "},{"title":"UserIds​","type":1,"pageTitle":"DataStore","url":"/SuphisDataStoreModule/api/DataStore#UserIds","content":"&lt;/&gt; DataStore.UserIds: {any} An array of UserIds associated with the key  "},{"title":"SaveInterval​","type":1,"pageTitle":"DataStore","url":"/SuphisDataStoreModule/api/DataStore#SaveInterval","content":"&lt;/&gt; DataStore.SaveInterval: number | 30 Interval in seconds the datastore will automatically save (set to 0 to disable automatic saving)  "},{"title":"SaveDelay​","type":1,"pageTitle":"DataStore","url":"/SuphisDataStoreModule/api/DataStore#SaveDelay","content":"&lt;/&gt; DataStore.SaveDelay: number | 0 Delay between saves  "},{"title":"LockInterval​","type":1,"pageTitle":"DataStore","url":"/SuphisDataStoreModule/api/DataStore#LockInterval","content":"&lt;/&gt; DataStore.LockInterval: number | 60 Interval in seconds the memorystore will update the session lock  "},{"title":"LockAttempts​","type":1,"pageTitle":"DataStore","url":"/SuphisDataStoreModule/api/DataStore#LockAttempts","content":"&lt;/&gt; DataStore.LockAttempts: number | 5 How many times the memorystore needs to fail before the session closes  "},{"title":"SaveOnClose​","type":1,"pageTitle":"DataStore","url":"/SuphisDataStoreModule/api/DataStore#SaveOnClose","content":"&lt;/&gt; DataStore.SaveOnClose: boolean | true Automatically save the data when the session is closed or destroyed  "},{"title":"Id​","type":1,"pageTitle":"DataStore","url":"/SuphisDataStoreModule/api/DataStore#Id","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; DataStore.Id: string | &quot;Name/Scope/Key&quot; Identifying string  "},{"title":"UniqueId​","type":1,"pageTitle":"DataStore","url":"/SuphisDataStoreModule/api/DataStore#UniqueId","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; DataStore.UniqueId: string | &quot;8-4-4-4-12&quot; Unique identifying string  "},{"title":"Key​","type":1,"pageTitle":"DataStore","url":"/SuphisDataStoreModule/api/DataStore#Key","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; DataStore.Key: string | &quot;Key&quot; Key used for the datastore  "},{"title":"State​","type":1,"pageTitle":"DataStore","url":"/SuphisDataStoreModule/api/DataStore#State","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; DataStore.State: boolean? | false Current state of the session nil = Destroyed false = Closed true = Open  "},{"title":"Hidden​","type":1,"pageTitle":"DataStore","url":"/SuphisDataStoreModule/api/DataStore#Hidden","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; DataStore.Hidden: boolean | false/true Set to true if this session was created by the hidden constructor  "},{"title":"AttemptsRemaining​","type":1,"pageTitle":"DataStore","url":"/SuphisDataStoreModule/api/DataStore#AttemptsRemaining","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; DataStore.AttemptsRemaining: number | 0 How many memorystore attempts remaining before the session closes  "},{"title":"CreatedTime​","type":1,"pageTitle":"DataStore","url":"/SuphisDataStoreModule/api/DataStore#CreatedTime","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; DataStore.CreatedTime: number | 0 Number of milliseconds from epoch to when the datastore was created  "},{"title":"CreatedTime​","type":1,"pageTitle":"DataStore","url":"/SuphisDataStoreModule/api/DataStore#CreatedTime","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; DataStore.CreatedTime: number | 0 Number of milliseconds from epoch to when the datastore was updated  "},{"title":"Version​","type":1,"pageTitle":"DataStore","url":"/SuphisDataStoreModule/api/DataStore#Version","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; DataStore.Version: string | &quot;&quot; Unique identifying string of the current datastore save  "},{"title":"CompressedValue​","type":1,"pageTitle":"DataStore","url":"/SuphisDataStoreModule/api/DataStore#CompressedValue","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; DataStore.CompressedValue: string | &quot;&quot; Compressed string that is updated before every save if compression is enabled by setting dataStore.Metadata.Compress = {[&quot;Level&quot;] = 2, [&quot;Decimals&quot;] = 3, [&quot;Safety&quot;] = true} Level = 1 (allows mixed tables), Level = 2 (does not allow mixed tables but compresses arrays better), Decimals = amount of decimal places saved, Safety = replace delete character from strings "},{"title":"Functions​","type":1,"pageTitle":"DataStore","url":"/SuphisDataStoreModule/api/DataStore#functions","content":" "},{"title":"Open​","type":1,"pageTitle":"DataStore","url":"/SuphisDataStoreModule/api/DataStore#Open","content":"&lt;/&gt; DataStore:Open( proxy: table, template: table ) → response: Enum | &quot;Success&quot; | &quot;Error&quot;  "},{"title":"Errors","type":1,"pageTitle":"DataStore","url":"/SuphisDataStoreModule/api/DataStore##","content":"Type\tDescription&quot;Attempt to Open failed: Passed value is not a DataStore&quot;\tThis happens because you passed a value that is not a Datastore  "},{"title":"Read​","type":1,"pageTitle":"DataStore","url":"/SuphisDataStoreModule/api/DataStore#Read","content":"&lt;/&gt; DataStore:Read( proxy: table, template: table ) → TaskManager  "},{"title":"Errors","type":1,"pageTitle":"DataStore","url":"/SuphisDataStoreModule/api/DataStore##","content":"Type\tDescription&quot;Attempt to Read failed: Passed value is not a DataStore&quot;\tThis happens because you passed a value that is not a Datastore  "},{"title":"Save​","type":1,"pageTitle":"DataStore","url":"/SuphisDataStoreModule/api/DataStore#Save","content":"&lt;/&gt; DataStore:Save(proxy: table) → TaskManager  "},{"title":"Errors","type":1,"pageTitle":"DataStore","url":"/SuphisDataStoreModule/api/DataStore##","content":"Type\tDescription&quot;Attempt to Save failed: Passed value is not a DataStore&quot;\tThis happens because you passed a value that is not a Datastore  "},{"title":"Close​","type":1,"pageTitle":"DataStore","url":"/SuphisDataStoreModule/api/DataStore#Close","content":"&lt;/&gt; DataStore:Close(proxy: table) → TaskManager  "},{"title":"Errors","type":1,"pageTitle":"DataStore","url":"/SuphisDataStoreModule/api/DataStore##","content":"Type\tDescription&quot;Attempt to Close failed: Passed value is not a DataStore&quot;\tThis happens because you passed a value that is not a Datastore  "},{"title":"Destroy​","type":1,"pageTitle":"DataStore","url":"/SuphisDataStoreModule/api/DataStore#Destroy","content":"&lt;/&gt; DataStore:Destroy(proxy: table) → TaskManager  "},{"title":"Errors","type":1,"pageTitle":"DataStore","url":"/SuphisDataStoreModule/api/DataStore##","content":"Type\tDescription&quot;Attempt to Destroy failed: Passed value is not a DataStore&quot;\tThis happens because you passed a value that is not a Datastore  "},{"title":"Queue​","type":1,"pageTitle":"DataStore","url":"/SuphisDataStoreModule/api/DataStore#Queue","content":"&lt;/&gt; DataStore:Queue( proxy: table, value: any, expiration: number, priority: number ) → TaskManager  "},{"title":"Errors","type":1,"pageTitle":"DataStore","url":"/SuphisDataStoreModule/api/DataStore##","content":"Type\tDescription&quot;Attempt to Queue failed: Passed value is not a DataStore&quot;\tThis happens because you passed a value that is not a Datastore &quot;Attempt to Destroy failed: Passed value is not nil or number&quot;\tThis happens because you passed expiration as not a number &quot;Attempt to Destroy failed: Passed value is not nil or number&quot;\tThis happens because you passed priorty as not a number  "},{"title":"Remove​","type":1,"pageTitle":"DataStore","url":"/SuphisDataStoreModule/api/DataStore#Remove","content":"&lt;/&gt; DataStore:Remove( proxy: table, id: string ) → response: Enum  Removes values from the MemoryStoreQueue "},{"title":"Errors","type":1,"pageTitle":"DataStore","url":"/SuphisDataStoreModule/api/DataStore##","content":"Type\tDescription&quot;Attempt to Remove failed: Passed value is not a DataStore&quot;\tThis happens because you passed a value that is not a Datastore &quot;Attempt to RemoveQueue failed: Passed value is not a string&quot;\tThis happens because you passed id as not a number &quot;Roblox memorystore error&quot;\tThis is happens if roblox returns a memorystore error.  "},{"title":"Clones​","type":1,"pageTitle":"DataStore","url":"/SuphisDataStoreModule/api/DataStore#Clones","content":"&lt;/&gt; DataStore:Clones(proxy: table) → TaskManager  "},{"title":"Errors","type":1,"pageTitle":"DataStore","url":"/SuphisDataStoreModule/api/DataStore##","content":"Type\tDescription&quot;Attempt to Clone failed: Passed value is not a DataStore&quot;\tThis happens because you passed a value that is not a Datastore  "},{"title":"Reconcile​","type":1,"pageTitle":"DataStore","url":"/SuphisDataStoreModule/api/DataStore#Reconcile","content":"&lt;/&gt; DataStore:Reconcile( proxy: table, template: table ) → ()  "},{"title":"Errors","type":1,"pageTitle":"DataStore","url":"/SuphisDataStoreModule/api/DataStore##","content":"Type\tDescription&quot;Attempt to Reconcile failed: Passed value is not a DataStore&quot;\tThis happens because you passed a value that is not a Datastore  "},{"title":"Usage​","type":1,"pageTitle":"DataStore","url":"/SuphisDataStoreModule/api/DataStore#Usage","content":"&lt;/&gt; DataStore:Usage(proxy: table) → characters: number  "},{"title":"Errors","type":1,"pageTitle":"DataStore","url":"/SuphisDataStoreModule/api/DataStore##","content":"Type\tDescription&quot;Attempt to Usage failed: Passed value is not a DataStore&quot;\tThis happens because you passed a value that is not a Datastore "},{"title":"Proxy","type":0,"sectionRef":"#","url":"/SuphisDataStoreModule/api/Proxy","content":"On this page Proxy Proxy table","keywords":""},{"title":"Signal","type":0,"sectionRef":"#","url":"/SuphisDataStoreModule/api/Signal","content":"On this page Signal Handles all the tasks synchronously","keywords":""}]