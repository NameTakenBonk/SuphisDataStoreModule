"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[13],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>g});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var i=r.createContext({}),d=function(e){var t=r.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},u=function(e){var t=d(e.components);return r.createElement(i.Provider,{value:t},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=d(a),h=n,g=p["".concat(i,".").concat(h)]||p[h]||c[h]||o;return a?r.createElement(g,s(s({ref:t},u),{},{components:a})):r.createElement(g,s({ref:t},u))}));function g(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,s=new Array(o);s[0]=h;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[p]="string"==typeof e?e:n,s[1]=l;for(var d=2;d<o;d++)s[d]=a[d];return r.createElement.apply(null,s)}return r.createElement.apply(null,a)}h.displayName="MDXCreateElement"},82544:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var r=a(87462),n=(a(67294),a(3905));const o={sidebar_position:3},s="Simple Data Store",l={unversionedId:"firstdatastore",id:"firstdatastore",title:"Simple Data Store",description:"To create your first data store we will do something really simple and I will explain what everything does.",source:"@site/docs/firstdatastore.md",sourceDirName:".",slug:"/firstdatastore",permalink:"/SuphisDataStoreModule/docs/firstdatastore",draft:!1,editUrl:"https://github.com/NameTakenBonk/SuphisDataStoreModule/edit/master/docs/firstdatastore.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"defaultSidebar",previous:{title:"Downloading",permalink:"/SuphisDataStoreModule/docs/installation"},next:{title:"Player Data Stores",permalink:"/SuphisDataStoreModule/docs/playerdatastore"}},i={},d=[{value:"Requiring",id:"requiring",level:2},{value:"Creating the data store",id:"creating-the-data-store",level:2},{value:"Adding State Events",id:"adding-state-events",level:2},{value:"Openning the data store",id:"openning-the-data-store",level:2},{value:"Full Source Code:",id:"full-source-code",level:3}],u={toc:d},p="wrapper";function c(e){let{components:t,...a}=e;return(0,n.kt)(p,(0,r.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"simple-data-store"},"Simple Data Store"),(0,n.kt)("p",null,"To create your first data store we will do something really simple and I will explain what everything does."),(0,n.kt)("h2",{id:"requiring"},"Requiring"),(0,n.kt)("p",null,"First we got to get the module."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-lua"},'local ServerStorage = game:GetService("ServerStorage")\nlocal DataStoreModule = require(ServerStorage.DataStoreModule)\n')),(0,n.kt)("h2",{id:"creating-the-data-store"},"Creating the data store"),(0,n.kt)("p",null,"To create the data store itself you got to use the ",(0,n.kt)("inlineCode",{parentName:"p"},".new")," function. ",(0,n.kt)("strong",{parentName:"p"},"You must use this once per data store!")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-lua"},'-- Require the ModuleScript\nlocal ServerStorage = game:GetService("ServerStorage")\nlocal DataStoreModule = require(ServerStorage.DataStoreModule)\n\n-- Find or create a datastore object\nlocal dataStore = DataStoreModule.new("Name", "Key")\n')),(0,n.kt)("p",null,"Let's go over the parameters real quick. The ",(0,n.kt)("inlineCode",{parentName:"p"},"Name")," is the the name of the datastore as you can tell. The ",(0,n.kt)("inlineCode",{parentName:"p"},"key")," of the datastore is like the key to your house there is only one pattern to your house key so as they key to your datastore, this can be shared for things like player data stores because you will most of the times will put the player's user id as the key."),(0,n.kt)("h2",{id:"adding-state-events"},"Adding State Events"),(0,n.kt)("p",null,"This is optional but this is great for debugging your code. There are 3 state events:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},'"Destroyed" - This happens when the data store gets destroyed.'),(0,n.kt)("li",{parentName:"ul"},'"Close" - This happens when the data store closes it session.'),(0,n.kt)("li",{parentName:"ul"},'"Open" - This happens when the data store opens it sessions.\nTo create the state changed code all we have to do is:')),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-lua"},'dataStore.StateChanged:Connect(function(state)\n    if state == nil then print("Destroyed", dataStore.Id) end\n    if state == false then print("Closed   ", dataStore.Id) end\n    if state == true then print("Open     ", dataStore.Id) end\nend)\n')),(0,n.kt)("p",null,"This will fire every time the data store's state changes, so when the data store get's destroyed it will fire the event for the Destroyed event."),(0,n.kt)("h2",{id:"openning-the-data-store"},"Openning the data store"),(0,n.kt)("p",null,"We have got the data store so why not open it, so that's what exactly we will do. This is really simple to do which requires two lines of code!"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-lua"},'\n-- Open the datastore session\nlocal response, responseData = dataStore:Open()\n\n-- If the session fails to open lets print why and return\nif response ~= "Success" then print(dataStore.Id, response, responseData) return end\n')),(0,n.kt)("p",null,"Now we have opened the data store we can edit the data inside it. This module gives you direct access to the data by simply doing this:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-lua"},'-- Set the datastore value\ndataStore.Value = "Hello World!"\n')),(0,n.kt)("p",null,"So we have done all the basics to the data store now we can destroy the datastore an be done with the basics."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-lua"},"-- Save, close and destroy the session\ndataStore:Destroy()\n")),(0,n.kt)("h3",{id:"full-source-code"},"Full Source Code:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-lua"},'-- Require the ModuleScript\nlocal ServerStorage = game:GetService("ServerStorage")\nlocal DataStoreModule = require(ServerStorage.DataStoreModule)\n\n-- Find or create a datastore object\nlocal dataStore = DataStoreModule.new("Name", "Key")\n\n-- Connect a function to the StateChanged event and print to the output when the state changes\ndataStore.StateChanged:Connect(function(state)\n    if state == nil then print("Destroyed", dataStore.Id) end\n    if state == false then print("Closed   ", dataStore.Id) end\n    if state == true then print("Open     ", dataStore.Id) end\nend)\n\n-- Open the datastore session\nlocal response, responseData = dataStore:Open()\n\n-- If the session fails to open lets print why and return\nif response ~= "Success" then print(dataStore.Id, response, responseData) return end\n\n-- Set the datastore value\ndataStore.Value = "Hello World!"\n\n-- Save, close and destroy the session\ndataStore:Destroy()\n')),(0,n.kt)("p",null,"-> Next we will connec the module to the player so we can save things like coins or inventory!"))}c.isMDXComponent=!0}}]);