"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[72],{3905:(e,t,r)=>{r.d(t,{Zo:()=>i,kt:()=>h});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},i=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,i=c(e,["components","mdxType","originalType","parentName"]),d=u(r),m=a,h=d["".concat(s,".").concat(m)]||d[m]||p[m]||o;return r?n.createElement(h,l(l({ref:t},i),{},{components:r})):n.createElement(h,l({ref:t},i))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[d]="string"==typeof e?e:a,l[1]=c;for(var u=2;u<o;u++)l[u]=r[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},94417:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>c,toc:()=>u});var n=r(87462),a=(r(67294),r(3905));const o={},l="More player examples",c={unversionedId:"v",id:"v",title:"More player examples",description:"Here I will show you more ways to use this module with the player.",source:"@site/docs/v.md",sourceDirName:".",slug:"/v",permalink:"/SuphisDataStoreModule/docs/v",draft:!1,editUrl:"https://github.com/NameTakenBonk/SuphisDataStoreModule/edit/master/docs/v.md",tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Conecting the data store to the player.",permalink:"/SuphisDataStoreModule/docs/u"}},s={},u=[{value:"Setting the players data.",id:"setting-the-players-data",level:2},{value:"Developer Products Example",id:"developer-products-example",level:2}],i={toc:u},d="wrapper";function p(e){let{components:t,...r}=e;return(0,a.kt)(d,(0,n.Z)({},i,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"more-player-examples"},"More player examples"),(0,a.kt)("p",null,"Here I will show you more ways to use this module with the player."),(0,a.kt)("h2",{id:"setting-the-players-data"},"Setting the players data."),(0,a.kt)("p",null,"If you still don't understand how to set the data of a player or anything then here is an example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'local dataStore = DataStoreModule.find("Player", player.UserId)\nif dataStore == nil then return end\nif dataStore.State ~= true then return end -- make sure the session is open or the value will never get saved\ndataStore.Value.Level += 1\n')),(0,a.kt)("h2",{id:"developer-products-example"},"Developer Products Example"),(0,a.kt)("p",null,"This is a way to save what a player bought."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'local MarketplaceService = game:GetService("MarketplaceService")\nlocal DataStoreModule = require(11671168253)\n\nMarketplaceService.ProcessReceipt = function(receiptInfo)\n    local dataStore = DataStoreModule.find("Player", receiptInfo.PlayerId)\n    if dataStore == nil then return Enum.ProductPurchaseDecision.NotProcessedYet end\n    if dataStore.State ~= true then return Enum.ProductPurchaseDecision.NotProcessedYet end\n\n    -- convert the ProductId to a string as we are not allowed empty slots for numeric indexes\n    local productId = tostring(receiptInfo.ProductId)\n\n    -- Add 1 to to the productId in the DeveloperProducts table\n    dataStore.Value.DeveloperProducts[productId] = (dataStore.Value.DeveloperProducts[productId] or 0) + 1\n\n    if dataStore:Save() == "Saved" then\n        -- there was no errors lets grant the purchase\n        return Enum.ProductPurchaseDecision.PurchaseGranted\n    else\n        -- the save failed lets make sure to remove the product or it might get saved in the next save interval\n        dataStore.Value.DeveloperProducts[productId] -= 1\n        return Enum.ProductPurchaseDecision.NotProcessedYet\n    end\nend\n')))}p.isMDXComponent=!0}}]);